{"version":3,"sources":["assets/images/desk.jpg","containers/MainPage/styled.ts","components/Navbar/styled.ts","components/Navbar/index.tsx","components/SectionTitle/styled.ts","components/SectionTitle/index.tsx","components/ScrollLink/index.tsx","containers/MainPage/index.tsx","App.tsx","serviceWorker.ts","index.tsx","shared/theme.ts"],"names":["module","exports","Main","styled","main","BackgroundImg","img","media","greaterThan","Section","section","lineCSS","css","theme","colors","white","Nav","nav","Item","li","Items","ul","isOpen","MenuBtn","button","blue","blueHard","Lines","span","black","Navbar","useState","setIsOpen","onClick","role","to","title","Heading","h2","fontSize","xl","SectionTitle","id","ScrollLink","children","style","flex","height","activeClass","spy","smooth","offset","duration","MainPage","src","desk","loading","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","blueDark","heavenly","xs","s","m","l","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0e5ef477.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desk.211017b8.jpg\";","import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nexport const Main = styled.main`\n    height: 100vh;\n`;\n\nexport const BackgroundImg = styled.img`\n    position: fixed;\n    z-index: -1;\n    width: auto;\n    max-height: 100%;\n    max-width: unset;\n\n    ${media.greaterThan('medium')`\n        max-width: 100%;\n        height: auto;\n        max-height: unset;\n    `}\n`;\n\nexport const Section = styled.section`\n    height: calc(100vh - 50px);\n\n    &:first-of-type {\n        padding-top: 100px;\n    }\n`;\n","import styled, { css } from 'styled-components';\nimport media from 'styled-media-query';\n\nconst lineCSS = css`\n    background-color: ${({ theme }) => theme.colors.white};\n    border-radius: 1px;\n    height: 2px;\n    width: 100%;\n    transition: all 0.2s;\n    z-index: 35;\n`;\n\nexport const Nav = styled.nav`\n    position: fixed;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    ${media.greaterThan('medium')`\n        justify-content: flex-start;\n    `}\n`;\n\nexport const Item = styled.li`\n    position: relative;\n    z-index: 45;\n    background-color: #2b6d9985;\n    height: 100%;\n    padding: 20px;\n    text-align: center;\n    font-family: Roboto, sans-serif;\n    overflow: hidden;\n\n    &:after {\n        content: '';\n        display: block;\n        position: absolute;\n        background-color: #005792;\n        opacity: 0.8;\n        top: 0;\n        bottom: 0;\n        left: -100%;\n        width: 100%;\n        z-index: -1;\n        transition: all 0.2s;\n    }\n\n    &:hover {\n        &:after {\n            left: 0;\n        }\n    }\n`;\n\nexport const Items = styled.ul<{ isOpen: boolean }>`\n    display: ${({ isOpen }) => (isOpen ? 'flex' : 'none')};\n    flex-direction: column;\n    justify-content: center;\n\n    ${Item} {\n        opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n        transition: all 0.2s;\n        will-change: opacity;\n\n        ${media.greaterThan('medium')`\n            opacity: 1;\n            flex:1;\n        `}\n    }\n\n    ${media.greaterThan('medium')`\n        display: flex;\n        flex-direction: row;\n        height: 60px;\n        justify-content: center;\n    `}\n`;\n\n// TODO - change to button\nexport const MenuBtn = styled.button<{ isOpen: boolean }>`\n    display: grid;\n    grid-template-columns: 1fr;\n    align-items: center;\n    height: 30px;\n    width: 30px;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    z-index: 30;\n\n    &:before {\n        content: '';\n        position: relative;\n        transition: all 0.3s linear;\n        background-color: ${({ theme }) => theme.colors.blue};\n        transform: ${({ isOpen }) => (isOpen ? 'scale(1)' : 'scale(0)')};\n        width: 300vmax;\n        height: 300vmax;\n        position: absolute;\n        transform-origin: 50% 50%;\n        top: calc(-150vmax + 15px);\n        right: calc(-150vmax + 15px);\n        border-radius: 50%;\n        overflow: hidden;\n        will-change: transform;\n    }\n    &:after {\n        content: '';\n        position: absolute;\n        border-radius: 50%;\n        display: block;\n        background-color: ${({ theme }) => theme.colors.blueHard};\n        width: 50px;\n        height: 50px;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n    }\n    ${media.greaterThan('medium')`\n        display: none;\n    `}\n`;\n\nexport const Lines = styled.span<{ isOpen: boolean }>`\n    ${lineCSS};\n    height: ${({ isOpen }) => (isOpen ? '0' : '2px')};\n    &:after,\n    &:before {\n        content: '';\n        ${lineCSS};\n        left: 0%;\n        background-color: ${({ isOpen, theme }) =>\n            isOpen ? theme.colors.black : theme.colors.white};\n        position: absolute;\n        transform: translate(0, 8px);\n        transform: ${({ isOpen }) => isOpen && 'rotate(-45deg)'};\n    }\n\n    &:before {\n        transform: translate(0, -8px);\n        transform: ${({ isOpen }) => isOpen && 'rotate(45deg)'};\n    }\n`;\n","import React, { useState } from 'react';\nimport * as Styled from './styled';\n// import { Link, animateScroll as scroll } from 'react-scroll';\nimport { ScrollLink } from './../../components';\n\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Styled.Nav>\n      <Styled.MenuBtn\n        isOpen={isOpen}\n        onClick={() => setIsOpen(!isOpen)}\n        role=\"button\"\n      >\n        <Styled.Lines isOpen={isOpen} />\n      </Styled.MenuBtn>\n      <Styled.Items isOpen={isOpen}>\n        <ScrollLink to=\"about-me\">\n          <Styled.Item\n            onClick={() => setIsOpen(!isOpen)} title=\"o mnie\">O mnie</Styled.Item>\n        </ScrollLink>\n        <ScrollLink to=\"education\">\n          <Styled.Item onClick={() => setIsOpen(!isOpen)} title=\"wykształcenie\">\n                        Wykształcenie\n          </Styled.Item>\n        </ScrollLink>\n        <ScrollLink to=\"work-experience\">\n          <Styled.Item onClick={() => setIsOpen(!isOpen)} title=\"Doświadczenie\">\n                        Doświadczenie\n          </Styled.Item>\n        </ScrollLink>\n        <ScrollLink to=\"skills\">\n          <Styled.Item onClick={() => setIsOpen(!isOpen)} title=\"Umiejętności\">Umiejętności</Styled.Item>\n        </ScrollLink>\n        <ScrollLink to=\"contact\">\n          <Styled.Item onClick={() => setIsOpen(!isOpen)} title=\"Kontakt\">Kontakt</Styled.Item>\n        </ScrollLink>\n      </Styled.Items>\n    </Styled.Nav>\n  );\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\n\nexport const Heading = styled.h2`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 50px;\n    background-color: ${({ theme }) => (theme.colors.black)};\n    font-size: ${({ theme }) => (theme.fontSize.xl)}px;\n`;\n","import React from 'react'\nimport * as Styled from './styled'\n\ninterface IProps {\n    title: string;\n    id: string;\n}\n\nconst SectionTitle: React.FunctionComponent<IProps> = ({ title, id }) => {\n  return (\n    <Styled.Heading id={id}>\n      {title}\n    </Styled.Heading>\n  )\n}\n\nexport default SectionTitle\n","import React from 'react';\nimport { Link, ScrollLinkProps } from 'react-scroll';\n\ninterface IProps extends Pick<ScrollLinkProps<HTMLElement>, 'to' | 'spy' | 'activeClass' | 'smooth' | 'offset' | 'duration'> {\n    children: React.ReactNode;\n}\n\nconst ScrollLink: React.FunctionComponent<IProps> = ({ children, to }) => {\n  return (\n    <Link\n      style={{ flex: 1, height: '100%' }}\n      activeClass=\"active\"\n      to={to}\n      spy={true}\n      smooth={true}\n      offset={-60}\n      duration={500}\n    >\n      {children}\n    </Link>\n  );\n};\n\nexport default ScrollLink;\n","import React from 'react'\nimport * as Styled from './styled'\nimport { SectionTitle, Navbar } from './../../components'\nimport desk from './../../assets/images/desk.jpg'\n\nconst MainPage = () => {\n  return (\n    <>\n      <Navbar/>\n      <Styled.Main>\n        <Styled.BackgroundImg src={desk} loading=\"lazy\" alt=\"\" />\n        <Styled.Section id='about-me'>\n              Nazywam się Artur Kwiatkowski. Jestem świeżo upieczonym inżynierem informatyki Uniwersytetu im. Adama Mickiewicza w Poznaniu. W kwietniu 2019 roku przeprowadzam się do Krakowa. Tam zamierzam zacząć pracę związaną z programowaniem. Obecnie rozwijam się w kierunku tworzenia aplikacji i stron internetowych. Nie zamykam się jednak na inne horyzontyw dziedzinie IT - praca powinna stale rozwijać i dawać przyjemność.\n\n        </Styled.Section>\n        <SectionTitle id={'education'} title={'Wykształcenie'}></SectionTitle>\n        <Styled.Section>\n              10.2015 – 03.2019\n\nUniwersytet im. Adama Mickiewicza w Poznaniu na Wydziale Matematyki i Informatyki - tytuł inżyniera\n10.2017 – 03.2018\n\nUniversità della Calabria - studia z programu Erasmus+ we Włoszech\n09.2011 – 04.2015\n\nTechnikum informatyczne w Zespole Szkół nr 2 im. Stanisława Staszica w Nowym Tomyślu - tytuł technika informatyka oraz złotego absolwenta\n\n        </Styled.Section>\n        <SectionTitle id={'work-experience'} title={'Doświadczenie zawodowe'}></SectionTitle>\n        <Styled.Section>\n              10.2015 – 03.2019\n\nUniwersytet im. Adama Mickiewicza w Poznaniu na Wydziale Matematyki i Informatyki - tytuł inżyniera\n10.2017 – 03.2018\n\nUniversità della Calabria - studia z programu Erasmus+ we Włoszech\n09.2011 – 04.2015\n\nTechnikum informatyczne w Zespole Szkół nr 2 im. Stanisława Staszica w Nowym Tomyślu - tytuł technika informatyka oraz złotego absolwenta\n\n        </Styled.Section>\n        <SectionTitle id={'skills'} title={'Umiejętności'}></SectionTitle>\n        <Styled.Section>\n              10.2015 – 03.2019\n\nUniwersytet im. Adama Mickiewicza w Poznaniu na Wydziale Matematyki i Informatyki - tytuł inżyniera\n10.2017 – 03.2018\n\nUniversità della Calabria - studia z programu Erasmus+ we Włoszech\n09.2011 – 04.2015\n\nTechnikum informatyczne w Zespole Szkół nr 2 im. Stanisława Staszica w Nowym Tomyślu - tytuł technika informatyka oraz złotego absolwenta\n\n        </Styled.Section>\n        <SectionTitle id={'contact'} title={'Kontakt'}></SectionTitle>\n        <Styled.Section>\n              10.2015 – 03.2019\n\nUniwersytet im. Adama Mickiewicza w Poznaniu na Wydziale Matematyki i Informatyki - tytuł inżyniera\n10.2017 – 03.2018\n\nUniversità della Calabria - studia z programu Erasmus+ we Włoszech\n09.2011 – 04.2015\n\nTechnikum informatyczne w Zespole Szkół nr 2 im. Stanisława Staszica w Nowym Tomyślu - tytuł technika informatyka oraz złotego absolwenta\n\n        </Styled.Section>\n      </Styled.Main>\n    </>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport './reset.css'\nimport { MainPage } from './containers'\n\nfunction App () {\n  return (\n    <MainPage />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './shared/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  colors: {\n    white: '#FFFFFF',\n    black: '#000000',\n    blueDark: '#00204a',\n    blueHard: '#005792',\n    blue: '#00bbf0',\n    heavenly: '#d9faff'\n  },\n  fontSize: {\n    xs: 14,\n    s: 16,\n    m: 20,\n    l: 26,\n    xl: 30\n  }\n};\n"],"sourceRoot":""}